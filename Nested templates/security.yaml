AWSTemplateFormatVersion: '2010-09-09'
Description: Security groups for EC2, ALB, RDS

Parameters:
  VPCID:
    Type: String
  AppName:
    Type: String
  Environment:
    Type: String

Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AppName}-${Environment}-alb-sg"
      GroupDescription: Allow HTTP
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-alb-sg"
        - Key: Environment
          Value: !Ref Environment

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AppName}-${Environment}-ec2-sg"
      GroupDescription: Allow SSH and app port
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          SourceSecurityGroupId: !Ref ALBSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-ec2-sg"
        - Key: Environment
          Value: !Ref Environment

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AppName}-${Environment}-rds-sg"
      GroupDescription: Allow MySQL from EC2
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2SecurityGroup
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-rds-sg"
        - Key: Environment
          Value: !Ref Environment

Outputs:
  EC2SecurityGroup:
    Value: !Ref EC2SecurityGroup
  ALBSecurityGroup:
    Value: !Ref ALBSecurityGroup
  RDSSecurityGroup:
    Value: !Ref RDSSecurityGroup
